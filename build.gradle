buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.2.1.RELEASE")
    }
}

plugins {
    id "java"
    id "org.springframework.boot" version "2.2.1.RELEASE"
    id "jacoco"
    id "checkstyle"
    id "com.github.kt3k.coveralls" version "2.8.4"
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
}

repositories {
    mavenCentral()
}

sourceSets {
	componentTest {
		java.srcDir file("src/component-test/java")
		resources.srcDir file("src/component-test/resources")
	}
}

task componentTest(type: Test) {
	testClassesDirs = sourceSets.componentTest.output.classesDirs
	classpath = sourceSets.componentTest.runtimeClasspath

    exclude("**/**Test.class")
}

tasks {
    wrapper {
        gradleVersion = "5.6.4"
    }

    bootJar {
        archiveFileName = "skeleton.jar"
    }

    jacocoTestReport {
        reports {
            xml.enabled = true
            html.enabled = true
        }
    }

    checkstyle {
        configFile = new File(rootDir, "checkstyle.xml")
    }

}

componentTest.dependsOn test
check.dependsOn componentTest
jar.dependsOn check

dependencies {
    compileOnly("org.projectlombok:lombok:1.18.4")
    annotationProcessor("org.projectlombok:lombok:1.18.4")

    implementation(platform("org.springframework.boot:spring-boot-dependencies:2.2.1.RELEASE"))

    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-actuator")

    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation("io.rest-assured:spring-mock-mvc:4.1.2")

    componentTestImplementation(configurations.implementation)
    componentTestImplementation("org.assertj:assertj-core:3.11.1")
    componentTestImplementation("org.testcontainers:testcontainers:1.12.3")
    componentTestImplementation("io.rest-assured:rest-assured:4.1.2")
}

